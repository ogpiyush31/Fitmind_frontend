{"ast":null,"code":"import _objectSpread from\"C:/Users/PIYUSH PATEL/OneDrive/Desktop/FitMind/fitmind/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from'axios';const API_BASE_URL=\"\".concat(process.env.REACT_APP_API_URL,\"/api\");// ✅ Save Mood Entry\nexport const saveMood=async moodData=>{try{const userId=localStorage.getItem('userId');if(!userId)throw new Error('User not logged in.');// Send mood data along with user_id (as required by backend)\nconst payload=_objectSpread(_objectSpread({},moodData),{},{user_id:parseInt(userId)// ensure it's a number\n});const response=await axios.post(\"\".concat(API_BASE_URL,\"/moods\"),payload);return response.data;}catch(error){var _error$response;console.error('❌ Error saving mood:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);throw error;}};// ✅ Fetch Weekly Mood Data\nexport const getWeeklyMood=async()=>{try{const userId=localStorage.getItem('userId');if(!userId)throw new Error('User not logged in.');const response=await axios.get(\"\".concat(API_BASE_URL,\"/moods/weekly\"),{params:{user_id:parseInt(userId)}// match backend param\n});return response.data;}catch(error){var _error$response2;console.error('❌ Error fetching weekly mood:',((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||error.message);throw error;}};","map":{"version":3,"names":["axios","API_BASE_URL","concat","process","env","REACT_APP_API_URL","saveMood","moodData","userId","localStorage","getItem","Error","payload","_objectSpread","user_id","parseInt","response","post","data","error","_error$response","console","message","getWeeklyMood","get","params","_error$response2"],"sources":["C:/Users/PIYUSH PATEL/OneDrive/Desktop/FitMind/fitmind/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = `${process.env.REACT_APP_API_URL}/api`;\r\n\r\n\r\n// ✅ Save Mood Entry\r\nexport const saveMood = async (moodData) => {\r\n  try {\r\n    const userId = localStorage.getItem('userId');\r\n    if (!userId) throw new Error('User not logged in.');\r\n\r\n    // Send mood data along with user_id (as required by backend)\r\n    const payload = {\r\n      ...moodData,\r\n      user_id: parseInt(userId), // ensure it's a number\r\n    };\r\n\r\n    const response = await axios.post(`${API_BASE_URL}/moods`, payload);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('❌ Error saving mood:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Fetch Weekly Mood Data\r\nexport const getWeeklyMood = async () => {\r\n  try {\r\n    const userId = localStorage.getItem('userId');\r\n    if (!userId) throw new Error('User not logged in.');\r\n\r\n    const response = await axios.get(`${API_BASE_URL}/moods/weekly`, {\r\n      params: { user_id: parseInt(userId) }, // match backend param\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('❌ Error fetching weekly mood:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"oJAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,IAAAC,MAAA,CAAMC,OAAO,CAACC,GAAG,CAACC,iBAAiB,QAAM,CAG3D;AACA,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC1C,GAAI,CACF,KAAM,CAAAC,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAC7C,GAAI,CAACF,MAAM,CAAE,KAAM,IAAI,CAAAG,KAAK,CAAC,qBAAqB,CAAC,CAEnD;AACA,KAAM,CAAAC,OAAO,CAAAC,aAAA,CAAAA,aAAA,IACRN,QAAQ,MACXO,OAAO,CAAEC,QAAQ,CAACP,MAAM,CAAG;AAAA,EAC5B,CAED,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAhB,KAAK,CAACiB,IAAI,IAAAf,MAAA,CAAID,YAAY,WAAUW,OAAO,CAAC,CACnE,MAAO,CAAAI,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,KAAAC,eAAA,CACdC,OAAO,CAACF,KAAK,CAAC,sBAAsB,CAAE,EAAAC,eAAA,CAAAD,KAAK,CAACH,QAAQ,UAAAI,eAAA,iBAAdA,eAAA,CAAgBF,IAAI,GAAIC,KAAK,CAACG,OAAO,CAAC,CAC5E,KAAM,CAAAH,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,aAAa,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CACF,KAAM,CAAAf,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAC7C,GAAI,CAACF,MAAM,CAAE,KAAM,IAAI,CAAAG,KAAK,CAAC,qBAAqB,CAAC,CAEnD,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAhB,KAAK,CAACwB,GAAG,IAAAtB,MAAA,CAAID,YAAY,kBAAiB,CAC/DwB,MAAM,CAAE,CAAEX,OAAO,CAAEC,QAAQ,CAACP,MAAM,CAAE,CAAG;AACzC,CAAC,CAAC,CAEF,MAAO,CAAAQ,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,KAAAO,gBAAA,CACdL,OAAO,CAACF,KAAK,CAAC,+BAA+B,CAAE,EAAAO,gBAAA,CAAAP,KAAK,CAACH,QAAQ,UAAAU,gBAAA,iBAAdA,gBAAA,CAAgBR,IAAI,GAAIC,KAAK,CAACG,OAAO,CAAC,CACrF,KAAM,CAAAH,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}