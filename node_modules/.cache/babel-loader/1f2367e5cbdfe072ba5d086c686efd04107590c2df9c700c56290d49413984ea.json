{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Line}from'react-chartjs-2';import{Chart as ChartJS,LineElement,PointElement,LinearScale,Title,CategoryScale,Tooltip,Legend}from'chart.js';import{getWeeklyMood}from'../services/api';// Make sure this API function passes userId\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(LineElement,PointElement,LinearScale,Title,CategoryScale,Tooltip,Legend);const MoodChart=()=>{const[moodData,setMoodData]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchMoodData=async()=>{try{const userId=localStorage.getItem('userId');if(!userId){throw new Error('User not logged in');}const data=await getWeeklyMood(userId);// âœ… Send userId to backend\nsetMoodData(data);}catch(error){console.error('Error fetching mood data:',error);}finally{setLoading(false);}};fetchMoodData();},[]);const chartData={labels:moodData.map(entry=>new Date(entry.date).toLocaleDateString(undefined,{weekday:'short',month:'short',day:'numeric'})),datasets:[{label:'Mood Sentiment',data:moodData.map(entry=>entry.sentiment),fill:false,backgroundColor:'#00e5ff',borderColor:'#00e5ff',tension:0.3,pointRadius:5,pointHoverRadius:7}]};const chartOptions={responsive:true,plugins:{legend:{display:true,labels:{color:'#ffffff'}},tooltip:{callbacks:{label:context=>\"Sentiment: \".concat(context.raw)}},title:{display:true,text:'Your Weekly Mood Trend',color:'#ffffff',font:{size:20}}},scales:{x:{ticks:{color:'#ffffff'},grid:{color:'rgba(255,255,255,0.1)'}},y:{ticks:{color:'#ffffff'},grid:{color:'rgba(255,255,255,0.1)'},beginAtZero:true}}};return/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'800px',margin:'0 auto',padding:'40px'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:'center',color:'#ffffff'},children:\"\\uD83D\\uDCC8 Mood Chart\"}),loading?/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',color:'#ccc'},children:\"Loading...\"}):moodData.length===0?/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',color:'#ff8a80'},children:\"No mood entries found.\"}):/*#__PURE__*/_jsx(Line,{data:chartData,options:chartOptions})]});};export default MoodChart;","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","LineElement","PointElement","LinearScale","Title","CategoryScale","Tooltip","Legend","getWeeklyMood","jsx","_jsx","jsxs","_jsxs","register","MoodChart","moodData","setMoodData","loading","setLoading","fetchMoodData","userId","localStorage","getItem","Error","data","error","console","chartData","labels","map","entry","Date","date","toLocaleDateString","undefined","weekday","month","day","datasets","label","sentiment","fill","backgroundColor","borderColor","tension","pointRadius","pointHoverRadius","chartOptions","responsive","plugins","legend","display","color","tooltip","callbacks","context","concat","raw","title","text","font","size","scales","x","ticks","grid","y","beginAtZero","style","maxWidth","margin","padding","children","textAlign","length","options"],"sources":["C:/Users/PIYUSH PATEL/OneDrive/Desktop/FitMind/fitmind/frontend/src/components/MoodChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  PointElement,\r\n  LinearScale,\r\n  Title,\r\n  CategoryScale,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { getWeeklyMood } from '../services/api'; // Make sure this API function passes userId\r\n\r\nChartJS.register(\r\n  LineElement,\r\n  PointElement,\r\n  LinearScale,\r\n  Title,\r\n  CategoryScale,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst MoodChart = () => {\r\n  const [moodData, setMoodData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMoodData = async () => {\r\n      try {\r\n        const userId = localStorage.getItem('userId');\r\n        if (!userId) {\r\n          throw new Error('User not logged in');\r\n        }\r\n\r\n        const data = await getWeeklyMood(userId); // âœ… Send userId to backend\r\n        setMoodData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching mood data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMoodData();\r\n  }, []);\r\n\r\n  const chartData = {\r\n    labels: moodData.map(entry =>\r\n      new Date(entry.date).toLocaleDateString(undefined, {\r\n        weekday: 'short',\r\n        month: 'short',\r\n        day: 'numeric',\r\n      })\r\n    ),\r\n    datasets: [\r\n      {\r\n        label: 'Mood Sentiment',\r\n        data: moodData.map(entry => entry.sentiment),\r\n        fill: false,\r\n        backgroundColor: '#00e5ff',\r\n        borderColor: '#00e5ff',\r\n        tension: 0.3,\r\n        pointRadius: 5,\r\n        pointHoverRadius: 7,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        labels: {\r\n          color: '#ffffff',\r\n        },\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (context) => `Sentiment: ${context.raw}`,\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Your Weekly Mood Trend',\r\n        color: '#ffffff',\r\n        font: {\r\n          size: 20,\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        ticks: { color: '#ffffff' },\r\n        grid: { color: 'rgba(255,255,255,0.1)' },\r\n      },\r\n      y: {\r\n        ticks: { color: '#ffffff' },\r\n        grid: { color: 'rgba(255,255,255,0.1)' },\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '800px', margin: '0 auto', padding: '40px' }}>\r\n      <h2 style={{ textAlign: 'center', color: '#ffffff' }}>ðŸ“ˆ Mood Chart</h2>\r\n      {loading ? (\r\n        <p style={{ textAlign: 'center', color: '#ccc' }}>Loading...</p>\r\n      ) : moodData.length === 0 ? (\r\n        <p style={{ textAlign: 'center', color: '#ff8a80' }}>No mood entries found.</p>\r\n      ) : (\r\n        <Line data={chartData} options={chartOptions} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoodChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}